[{"/home/dong/projects/option-scanner/frontend/src/index.js":"1","/home/dong/projects/option-scanner/frontend/src/App.js":"2","/home/dong/projects/option-scanner/frontend/src/reportWebVitals.js":"3","/home/dong/projects/option-scanner/frontend/src/components/navbar/Navbar.js":"4","/home/dong/projects/option-scanner/frontend/src/components/table/ApiTables.js":"5","/home/dong/projects/option-scanner/frontend/src/components/home/Home.js":"6","/home/dong/projects/option-scanner/frontend/src/components/table/CheckBox.js":"7","/home/dong/projects/option-scanner/frontend/src/components/table/Test.js":"8"},{"size":500,"mtime":1608597215991,"results":"9","hashOfConfig":"10"},{"size":738,"mtime":1610529890319,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608597215991,"results":"12","hashOfConfig":"10"},{"size":393,"mtime":1608597215991,"results":"13","hashOfConfig":"10"},{"size":2441,"mtime":1610529246913,"results":"14","hashOfConfig":"10"},{"size":151,"mtime":1608597215991,"results":"15","hashOfConfig":"10"},{"size":2897,"mtime":1608597215994,"results":"16","hashOfConfig":"10"},{"size":519,"mtime":1610529902589,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ziyfjk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dong/projects/option-scanner/frontend/src/index.js",[],["38","39"],"/home/dong/projects/option-scanner/frontend/src/App.js",["40"],"/home/dong/projects/option-scanner/frontend/src/reportWebVitals.js",[],"/home/dong/projects/option-scanner/frontend/src/components/navbar/Navbar.js",["41","42","43"],"import React from \"react\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\"\n \nexport default function Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">\n            NEETsignals \n          </a>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","/home/dong/projects/option-scanner/frontend/src/components/table/ApiTables.js",["44"],"import React, { useState, useEffect } from \"react\";\nimport CheckBox from \"./CheckBox\";\n\nexport default function ApiTables() {\n  const [api, setApi] = useState([]);\n  const [days, setDays] = useState(15);\n  const [goldenRatio, setGoldenRatio] = useState(0.6);\n  const [volume, setVolume] = useState(500);\n  const [oi, setOi] = useState(1000);\n\n  // call api on page load\n  useEffect(async () => {\n    const res = await fetch(\n      \"https://api.neetcode.com/callieSpreadsLong?days=14\"\n    );\n    const data = await res.json();\n    setApi(data);\n  }, []);\n\n  // call api using function based on events\n  async function makeReq() {\n    const url = `https://api.neetcode.com/callieSpreadsLong?days=${days}&goldenRatio=${goldenRatio}&totalVolume=${volume}&openInterest=${oi}`;\n    const res = await fetch(url);\n    const data = await res.json();\n    console.log(\"make req ran \");\n    console.log(url);\n    setApi(data);\n  }\n\n  // const tickers = api.map((something) => <li>{something.ticker}</li>);\n  let rows;\n  if (Array.isArray(api)){\n    rows = api.map((row) => (\n      <tr>\n        <th scope=\"row\">{row.ticker}</th>\n        <th scope=\"row\">{row.underlyingPrice}</th>\n        <td>{row.dates.join(\" / \\t\")}</td>\n        <td>{row.strikes.join(\" / \\t\")}</td>\n        <td>{row.goldenRatio.join(\" / \\t\")}</td>\n        <td>{row.prices.join(\" / \\t\")}</td>\n      </tr>\n    ));\n  }\n  // const rows = api.map((row) => (\n  //   <tr>\n  //     <th scope=\"row\">{row.ticker}</th>\n  //     <th scope=\"row\">{row.underlyingPrice}</th>\n  //     <td>{row.dates.join(\" / \\t\")}</td>\n  //     <td>{row.strikes.join(\" / \\t\")}</td>\n  //     <td>{row.goldenRatio.join(\" / \\t\")}</td>\n  //     <td>{row.prices.join(\" / \\t\")}</td>\n  //   </tr>\n  // ));\n  // console.log(goldenRatio)\n  // console.log(volume)\n  // console.log(oi)\n  return (\n    <React.Fragment>\n      <CheckBox\n        makeReq={makeReq}\n        setDays={setDays}\n        days={days}\n        setGoldenRatio={setGoldenRatio}\n        setVolume={setVolume}\n        setOi={setOi}\n      />\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ticker</th>\n            <th scope=\"col\">underlyingPrice</th>\n            <th scope=\"col\">dates</th>\n            <th scope=\"col\">strikes</th>\n            <th scope=\"col\">golden ratio</th>\n            <th scope=\"col\">prices</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </React.Fragment>\n  );\n}\n","/home/dong/projects/option-scanner/frontend/src/components/home/Home.js",[],"/home/dong/projects/option-scanner/frontend/src/components/table/CheckBox.js",["45","46"],"import React, { useState } from \"react\";\n\nexport default function CheckBox(props) {\n  console.log(props.days);\n  function onChange(e) {\n    e.preventDefault();\n  }\n  return (\n    <React.Fragment>\n      <div className=\"mx-3\">\n        <p className=\"mt-3\">days</p>\n        <div className=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"inlineRadioOptions\"\n            id=\"inlineRadio1\"\n            value=\"14\"\n            onChange={(e) => {\n              props.setDays(e.target.value);\n            }}\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio1\">\n            14\n          </label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"inlineRadioOptions\"\n            id=\"inlineRadio2\"\n            value=\"20\"\n            onChange={(e) => {\n              props.setDays(e.target.value);\n            }}\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio2\">\n            20\n          </label>\n        </div>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault()\n            props.makeReq();\n          }}\n        >\n          <div className=\"row\">\n            <div class=\"form-group col-4\">\n              <label for=\"formGroupExampleInput\">ratio</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput\"\n                placeholder=\"default ratio .6\"\n                onChange={(e) => {\n                  props.setGoldenRatio(e.target.value);\n                }}\n              />\n            </div>\n            <div class=\"form-group col-4\">\n              <label for=\"formGroupExampleInput2\">volume</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput2\"\n                placeholder=\"default volume 500 \"\n                onChange={(e) => {\n                  props.setVolume(e.target.value);\n                }}\n              />\n            </div>\n            <div class=\"form-group col-4\">\n              <label for=\"formGroupExampleInput2\">open interest</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput2\"\n                placeholder=\"default oi 1000\"\n                onChange={(e) => {\n                  props.setOi(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            onSubmit={(e) => {\n              e.preventDefault()\n              props.makeReq();\n            }}\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}\n","/home/dong/projects/option-scanner/frontend/src/components/table/Test.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":6,"column":8,"nodeType":"53","messageId":"54","endLine":6,"endColumn":12},{"ruleId":"51","severity":1,"message":"55","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":23},{"ruleId":"51","severity":1,"message":"56","line":2,"column":25,"nodeType":"53","messageId":"54","endLine":2,"endColumn":30},{"ruleId":"51","severity":1,"message":"57","line":2,"column":32,"nodeType":"53","messageId":"54","endLine":2,"endColumn":36},{"ruleId":"58","severity":1,"message":"59","line":12,"column":13,"nodeType":"60","endLine":18,"endColumn":4},{"ruleId":"51","severity":1,"message":"61","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"62","line":5,"column":12,"nodeType":"53","messageId":"54","endLine":5,"endColumn":20},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useState' is defined but never used.","'onChange' is defined but never used.","no-global-assign","no-unsafe-negation"]