[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/reportWebVitals.js":"3","/app/src/components/navbar/Navbar.js":"4","/app/src/components/bigTrades/ApiBigTrades.js":"5","/app/src/components/home/Home.js":"6","/app/src/components/callieSpreads/ApiCallieSpreads.js":"7","/app/src/components/bigTrades/About.js":"8","/app/src/components/callieSpreads/CheckBox.js":"9","/app/src/components/bigTrades/Table.js":"10","/app/src/components/callieSpreads/Tables.js":"11","/app/src/components/callieSpreads/About.js":"12","/app/src/components/callieSpreads/Table2.js":"13"},{"size":500,"mtime":1608597215991,"results":"14","hashOfConfig":"15"},{"size":605,"mtime":1610622543881,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608597215991,"results":"17","hashOfConfig":"15"},{"size":1013,"mtime":1612642237953,"results":"18","hashOfConfig":"15"},{"size":1176,"mtime":1615450585086,"results":"19","hashOfConfig":"15"},{"size":151,"mtime":1608597215991,"results":"20","hashOfConfig":"15"},{"size":1549,"mtime":1615446957215,"results":"21","hashOfConfig":"15"},{"size":372,"mtime":1612636223939,"results":"22","hashOfConfig":"15"},{"size":2897,"mtime":1610622543881,"results":"23","hashOfConfig":"15"},{"size":1322,"mtime":1615450618980,"results":"24","hashOfConfig":"15"},{"size":817,"mtime":1610622543881,"results":"25","hashOfConfig":"15"},{"size":306,"mtime":1612636223939,"results":"26","hashOfConfig":"15"},{"size":1732,"mtime":1615450118317,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"wz73hg",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/app/src/index.js",[],["60","61"],"/app/src/App.js",["62"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Navbar from './components/navbar/Navbar';\nimport Home from './components/home/Home';\nimport CallieSpreads from './components/callieSpreads/ApiCallieSpreads';\nimport BigTrades from './components/bigTrades/ApiBigTrades'\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<React.Fragment>\n\t\t\t\t<Navbar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/bigTrades\" component={BigTrades} />\n\t\t\t\t\t<Route exact path=\"/\" component={CallieSpreads} />\n\t\t\t\t</Switch>\n\t\t\t</React.Fragment>\n\t\t</Router>\n\t);\n}\nexport default App;\n","/app/src/reportWebVitals.js",[],"/app/src/components/navbar/Navbar.js",["63","64"],"import React from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nexport default function Navbar() {\n\treturn (\n\t\t<div>\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<Link className=\"navbar-brand\" href=\"/\">\n\t\t\t\t\t\tNEETsignals\n\t\t\t\t\t</Link>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"navbar-toggler\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\t\tdta-target=\"#navbarNavAltMarkup\"\n\t\t\t\t\t\taria-controls=\"navbarNavAltMarkup\"\n\t\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\t\taria-label=\"Toggle navigation\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"navbar-toggler-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n\t\t\t\t\t\t<div className=\"navbar-nav\">\n\t\t\t\t\t\t\t<Link className=\"nav-item nav-link\" to=\"/\">\n\t\t\t\t\t\t\t\tCallie Spreads<span className=\"sr-only\" />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link className=\"nav-item nav-link\" to=\"bigTrades\">\n\t\t\t\t\t\t\t\tBig Trades\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</div>\n\t);\n}\n","/app/src/components/bigTrades/ApiBigTrades.js",["65","66","67","68","69","70","71"],"/app/src/components/home/Home.js",[],"/app/src/components/callieSpreads/ApiCallieSpreads.js",["72","73","74","75"],"import React, { useState, useEffect } from 'react';\nimport CheckBox from './CheckBox';\nimport Tables from './Tables';\nimport Table2 from './Table2';\nimport About from './About'\nexport default function ApiTables() {\n\tconst [ api, setApi ] = useState([]);\n\tconst [earnings, setEarnings] = useState([])\n\tconst [ days, setDays ] = useState(15);\n\tconst [ goldenRatio, setGoldenRatio ] = useState(0.6);\n\tconst [ volume, setVolume ] = useState(500);\n\tconst [ oi, setOi ] = useState(1000);\n\tconst [ table, setTable ] = useState('react-table');\n\n\t// call api on page load\n\tuseEffect(async () => {\n\t\tconst res = await fetch('https://api.neetcode.com/callieSpreadsLong?days=14');\n\t\tconst callies = await res.json();\n\t\tconst res2 = await fetch('https://api.neetcode.com/earningsThisWeek')\n\t\tconst earningss = await res2.json() \n\t\tsetApi(callies);\n\t\tsetEarnings(earningss)\n\t}, []);\n\t// call api using function based on events\n\tasync function makeReq() {\n\t\tconst url = `https://api.neetcode.com/callieSpreadsLong?days=${days}&goldenRatio=${goldenRatio}&totalVolume=${volume}&openInterest=${oi}`;\n\t\tconst res = await fetch(url);\n\t\tconst callies = await res.json();\n\t\tconsole.log('make req ran ');\n\t\tconsole.log(url);\n\t\tsetApi(callies);\n\t}\n\tconsole.log(earnings)\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<About />\n\t\t\t<CheckBox\n\t\t\t\tmakeReq={makeReq}\n\t\t\t\tsetDays={setDays}\n\t\t\t\tdays={days}\n\t\t\t\tsetGoldenRatio={setGoldenRatio}\n\t\t\t\tsetVolume={setVolume}\n\t\t\t\tsetOi={setOi}\n\t\t\t/>\n\t\t\t{/* <Tables api={api}/> */}\n\t\t\t<Table2 api={api} earnings={earnings} />\n\t\t</React.Fragment>\n\t);\n}\n","/app/src/components/bigTrades/About.js",[],"/app/src/components/callieSpreads/CheckBox.js",["76","77"],"import React, { useState } from \"react\";\n\nexport default function CheckBox(props) {\n  console.log(props.days);\n  function onChange(e) {\n    e.preventDefault();\n  }\n  return (\n    <React.Fragment>\n      <div className=\"mx-3\">\n        <p className=\"mt-3\">days</p>\n        <div className=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"inlineRadioOptions\"\n            id=\"inlineRadio1\"\n            value=\"14\"\n            onChange={(e) => {\n              props.setDays(e.target.value);\n            }}\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio1\">\n            14\n          </label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"inlineRadioOptions\"\n            id=\"inlineRadio2\"\n            value=\"20\"\n            onChange={(e) => {\n              props.setDays(e.target.value);\n            }}\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio2\">\n            20\n          </label>\n        </div>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault()\n            props.makeReq();\n          }}\n        >\n          <div className=\"row\">\n            <div class=\"form-group col-4\">\n              <label for=\"formGroupExampleInput\">ratio</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput\"\n                placeholder=\"default ratio .6\"\n                onChange={(e) => {\n                  props.setGoldenRatio(e.target.value);\n                }}\n              />\n            </div>\n            <div class=\"form-group col-4\">\n              <label for=\"formGroupExampleInput2\">volume</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput2\"\n                placeholder=\"default volume 500 \"\n                onChange={(e) => {\n                  props.setVolume(e.target.value);\n                }}\n              />\n            </div>\n            <div class=\"form-group col-4\">\n              <label for=\"formGroupExampleInput2\">open interest</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput2\"\n                placeholder=\"default oi 1000\"\n                onChange={(e) => {\n                  props.setOi(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            onSubmit={(e) => {\n              e.preventDefault()\n              props.makeReq();\n            }}\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}\n","/app/src/components/bigTrades/Table.js",["78"],"/app/src/components/callieSpreads/Tables.js",[],"/app/src/components/callieSpreads/About.js",[],"/app/src/components/callieSpreads/Table2.js",["79"],"import React from 'react';\nimport DataTable from 'react-data-table-component';\n\n// const data = [ { id: 1, title: 'Conan the Barbarian', year: '1982' } ];\nconst columns = [\n\t{\n\t\tname: 'Ticker',\n\t\tselector: 'ticker',\n\t\tsortable: true\n\t},\n\t{\n\t\tname: 'Underlying Price',\n\t\tselector: 'underlyingPrice',\n\t\tsortable: true\n\t},\n\t{\n\t\tname: 'Golden Ratio',\n\t\tselector: 'goldenRatio',\n\t\tsortable: true\n\t},\n\t{\n\t\tname: 'Strikes',\n\t\tselector: 'strikes',\n\t\tsortable: true\n\t},\n\t{\n\t\tname: 'Prices',\n\t\tselector: 'prices',\n\t\tsortable: true\n\t},\n\t{\n\t\tname: 'Dates',\n\t\t selector: 'dates'\n\t}\n];\nfunction checkEarnings(ticker, earnings) {\n\tlet newTicker = ticker \n\tlet foundTickers = []\n\tearnings.forEach( earning => {\n\t\tif (earning.ticker == ticker) {\n\t\t\tconsole.log(earning.ticker)\n\t\t\tconsole.log('found earnings')\n\t\t\tnewTicker = `${earning.ticker} (ER: ${earning.date})` \n\t\t\tfoundTickers.push(ticker)\n\t\t} \n\t})\t\n\treturn newTicker\n}\nexport default function Table2(props) {\n\tconst data = props.api;\n\n\tconst api = props.api;\n\tconst earnings = props.earnings\n\tconsole.log(data)\n\tconsole.log(earnings)\n\tlet rows;\n\tif (Array.isArray(api)) {\n\t\trows = api.map((row) => (\n\t\t{\n\t\t\tticker: checkEarnings(row.ticker, earnings),\n\t\t\tunderlyingPrice: row.underlyingPrice,\n\t\t\tdates: row.dates.join(' / \\t'),\n\t\t\tstrikes: row.strikes.join(' / \\t'),\n\t\t\tgoldenRatio: row.goldenRatio.join(' / \\t'),\n\t\t\tprices: row.prices.join(' / \\t')\n\t\t}));\n\n\t}\n\t// let test;\n\t// if (Array.isArray(earnings)) {\n\t// \tdata.forEach(row => {\n\t// \t\tcheckEarnings(row.ticker, earnings)\n\t// \t})\n\n\t// }\n\tconsole.log(rows);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"\">\n\t\t\t\t<DataTable columns={columns} data={rows} responsive={true} highlightOnHover={true} />\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n}\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":12},{"ruleId":"84","severity":1,"message":"88","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":23},{"ruleId":"84","severity":1,"message":"89","line":2,"column":25,"nodeType":"86","messageId":"87","endLine":2,"endColumn":30},{"ruleId":"84","severity":1,"message":"90","line":6,"column":17,"nodeType":"86","messageId":"87","endLine":6,"endColumn":25},{"ruleId":"84","severity":1,"message":"91","line":7,"column":18,"nodeType":"86","messageId":"87","endLine":7,"endColumn":27},{"ruleId":"84","severity":1,"message":"92","line":8,"column":14,"nodeType":"86","messageId":"87","endLine":8,"endColumn":19},{"ruleId":"84","severity":1,"message":"93","line":9,"column":10,"nodeType":"86","messageId":"87","endLine":9,"endColumn":15},{"ruleId":"84","severity":1,"message":"94","line":9,"column":17,"nodeType":"86","messageId":"87","endLine":9,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":13,"column":12,"nodeType":"97","endLine":21,"endColumn":3},{"ruleId":"84","severity":1,"message":"98","line":24,"column":17,"nodeType":"86","messageId":"87","endLine":24,"endColumn":24},{"ruleId":"84","severity":1,"message":"99","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":14},{"ruleId":"84","severity":1,"message":"93","line":13,"column":10,"nodeType":"86","messageId":"87","endLine":13,"endColumn":15},{"ruleId":"84","severity":1,"message":"94","line":13,"column":17,"nodeType":"86","messageId":"87","endLine":13,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":16,"column":12,"nodeType":"97","endLine":23,"endColumn":3},{"ruleId":"84","severity":1,"message":"100","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"101","line":5,"column":12,"nodeType":"86","messageId":"87","endLine":5,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":34,"column":22,"nodeType":"104","messageId":"105","endLine":34,"endColumn":24},{"ruleId":"102","severity":1,"message":"103","line":40,"column":22,"nodeType":"104","messageId":"105","endLine":40,"endColumn":24},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'setRatio' is assigned a value but never used.","'setVolume' is assigned a value but never used.","'setOi' is assigned a value but never used.","'table' is assigned a value but never used.","'setTable' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'makeReq' is defined but never used.","'Tables' is defined but never used.","'useState' is defined but never used.","'onChange' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]