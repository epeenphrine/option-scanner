{"version":3,"sources":["components/table/CheckBox.js","components/table/ApiTables.js","components/navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["CheckBox","props","console","log","days","Fragment","className","class","type","name","id","value","onChange","e","setDays","target","for","onSubmit","preventDefault","makeReq","placeholder","setGoldenRatio","setVolume","setOi","ApiTables","useState","api","setApi","goldenRatio","volume","oi","a","url","fetch","res","json","data","useEffect","map","something","ticker","rows","row","scope","dates","join","strikes","Navbar","href","App","exact","path","component","Table","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30072c4f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function CheckBox(props) {\n  console.log(props.days);\n  function onChange(e) {\n    e.preventDefault();\n  }\n  return (\n    <React.Fragment>\n      <div className=\"mx-3\">\n        <p className=\"mt-3\">days</p>\n        <div className=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"inlineRadioOptions\"\n            id=\"inlineRadio1\"\n            value=\"14\"\n            onChange={(e) => {\n              props.setDays(e.target.value);\n            }}\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio1\">\n            14\n          </label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"inlineRadioOptions\"\n            id=\"inlineRadio2\"\n            value=\"20\"\n            onChange={(e) => {\n              props.setDays(e.target.value);\n            }}\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio2\">\n            20\n          </label>\n        </div>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault()\n            props.makeReq();\n          }}\n        >\n          <div className=\"row\">\n            <div class=\"form-group col-4\">\n              <label for=\"formGroupExampleInput\">ratio</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput\"\n                placeholder=\"default ratio .6\"\n                onChange={(e) => {\n                  props.setGoldenRatio(e.target.value);\n                }}\n              />\n            </div>\n            <div class=\"form-group col-4\">\n              <label for=\"formGroupExampleInput2\">volume</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput2\"\n                placeholder=\"default volume 500 \"\n                onChange={(e) => {\n                  props.setVolume(e.target.value);\n                }}\n              />\n            </div>\n            <div class=\"form-group col-4\">\n              <label for=\"formGroupExampleInput2\">open interest</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput2\"\n                placeholder=\"default oi 1000\"\n                onChange={(e) => {\n                  props.setOi(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            onSubmit={(e) => {\n              e.preventDefault()\n              props.makeReq();\n            }}\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport CheckBox from \"./CheckBox\";\n\nexport default function ApiTables() {\n  const [api, setApi] = useState([]);\n  const [days, setDays] = useState(15);\n  const [goldenRatio, setGoldenRatio] = useState(0.6);\n  const [volume, setVolume] = useState(500);\n  const [oi, setOi] = useState(1000);\n\n  // call api on page load\n  useEffect(async () => {\n    const res = await fetch(\n      \"https://api.neetcode.com/api/callieSpreads?days=14\"\n    );\n    const data = await res.json();\n    setApi(data);\n  }, []);\n\n  // call api using function based on events\n  async function makeReq() {\n    const url = `https://api.neetcode.com/api/callieSpreads?days=${days}&goldenRatio=${goldenRatio}&totalVolume=${volume}&openInterest=${oi}`;\n    const res = await fetch(url);\n    const data = await res.json();\n    console.log(\"make req ran \");\n    console.log(url);\n    setApi(data);\n  }\n  const tickers = api.map((something) => <li>{something.ticker}</li>);\n  const rows = api.map((row) => (\n    <tr>\n      <th scope=\"row\">{row.ticker}</th>\n      <td>{row.dates.join(\" / \\t\")}</td>\n      <td>{row.goldenRatio.join(\" / \\t\")}</td>\n      <td>{row.strikes.join(\" / \\t\")}</td>\n    </tr>\n  ));\n  // console.log(goldenRatio)\n  // console.log(volume)\n  // console.log(oi)\n  return (\n    <React.Fragment>\n      <CheckBox\n        makeReq={makeReq}\n        setDays={setDays}\n        days={days}\n        setGoldenRatio={setGoldenRatio}\n        setVolume={setVolume}\n        setOi={setOi}\n      />\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ticker</th>\n            <th scope=\"col\">dates</th>\n            <th scope=\"col\">golden ratio</th>\n            <th scope=\"col\">strikes</th>\n            <th scope=\"col\">prices</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\"\n \nexport default function Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">\n            NEETsignals \n          </a>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React from \"react\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Table from \"./components/table/ApiTables\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Home from \"./components/home/Home\"\n\nfunction App() {\n  return (\n    <Router>\n      <React.Fragment>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/tables\" component={Table} />\n            <Route exact path=\"/\" component={Table} />\n          </Switch>\n        </div>\n      </React.Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}