[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/reportWebVitals.js":"3","/app/src/components/table/ApiTables.js":"4","/app/src/components/navbar/Navbar.js":"5","/app/src/components/home/Home.js":"6","/app/src/components/table/CheckBox.js":"7"},{"size":500,"mtime":1606955099290,"results":"8","hashOfConfig":"9"},{"size":595,"mtime":1607037896867,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1606955099290,"results":"11","hashOfConfig":"9"},{"size":1889,"mtime":1607041203870,"results":"12","hashOfConfig":"9"},{"size":1692,"mtime":1607045233663,"results":"13","hashOfConfig":"9"},{"size":151,"mtime":1606955099290,"results":"14","hashOfConfig":"9"},{"size":2897,"mtime":1607040916338,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1qsoct1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/app/src/index.js",[],["31","32"],"/app/src/App.js",["33"],"/app/src/reportWebVitals.js",[],"/app/src/components/table/ApiTables.js",["34","35"],"/app/src/components/navbar/Navbar.js",["36","37","38","39","40"],"/app/src/components/home/Home.js",[],"/app/src/components/table/CheckBox.js",["41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":6,"column":8,"nodeType":"49","messageId":"50","endLine":6,"endColumn":12},{"ruleId":"51","severity":1,"message":"52","line":12,"column":13,"nodeType":"53","endLine":18,"endColumn":4},{"ruleId":"47","severity":1,"message":"54","line":29,"column":9,"nodeType":"49","messageId":"50","endLine":29,"endColumn":16},{"ruleId":"47","severity":1,"message":"55","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":23},{"ruleId":"47","severity":1,"message":"56","line":2,"column":25,"nodeType":"49","messageId":"50","endLine":2,"endColumn":30},{"ruleId":"47","severity":1,"message":"57","line":2,"column":32,"nodeType":"49","messageId":"50","endLine":2,"endColumn":36},{"ruleId":"58","severity":1,"message":"59","line":36,"column":17,"nodeType":"60","endLine":36,"endColumn":50},{"ruleId":"58","severity":1,"message":"59","line":41,"column":17,"nodeType":"60","endLine":46,"endColumn":18},{"ruleId":"47","severity":1,"message":"61","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"62","line":5,"column":12,"nodeType":"49","messageId":"50","endLine":5,"endColumn":20},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'tickers' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'onChange' is defined but never used.","no-global-assign","no-unsafe-negation"]